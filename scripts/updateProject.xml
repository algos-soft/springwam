<?xml version="1.0"?>
<project name="updateProject" default="updateProgetto">


    <!--Valori sicuramente da regolare in un nuovo progetto-->
    <property name="nomeBaseProgetto" value="Springwam"/>
    <!--Fine dei valori obbligatori-->

    <!--Valori probabilmente accettabili in un nuovo progetto-->
    <property name="nomeBaseFramework" value="springvaadin"/>
    <property name="versione" value="1.0"/>
    <!--Fine dei valori facoltativi-->

    <!--Valori cambiati da questo stesso script-->
    <!--Cambiano quando si passa da newProject a updatProject-->
    <!--PerchÃ© lo script viene 'annidato' in una cartella interna-->
    <property name="risalita" value="/.."/>
    <!--Fine dei valori modificati da questo script-->

    <!--Tag varii-->
    <property name="tagXml" value=".xml"/>
    <property name="tagTxt" value=".txt"/>
    <property name="tagJava" value=".java"/>
    <property name="dirApp" value="application"/>
    <property name="dirBoot" value="bootstrap"/>
    <property name="dirUI" value="ui"/>
    <property name="tagApp" value="Application"/>
    <property name="tagCost" value="AppCost"/>
    <property name="tagBoot" value="Boot"/>
    <property name="tagUI" value="UI"/>
    <property name="tagPom" value="pom"/>
    <property name="tagRes" value="spring.datasource"/>
    <property name="tagRead" value="README${tagTxt}"/>
    <property name="tagFrameworkProperties" value="Properties"/>
    <property name="tagFrameworkMailProperties" value="Mail"/>
    <property name="tagProjectProperties" value="application.properties"/>
    <property name="tagProjectMailProperties" value="mail.properties"/>
    <property name="tagPackage" value="newPackage"/>
    <property name="tagOldProject" value="newProject"/>
    <property name="tagNewProject" value="updateProject"/>
    <property name="tagMain" value="src/main"/>
    <property name="tagIdea" value="${tagMain}/java"/>
    <property name="tagAlgos" value="it/algos"/>
    <property name="tagPathJava" value="${tagIdea}/${tagAlgos}"/>
    <property name="tagWebapp" value="webapp"/>
    <property name="tagStatic" value="resources/static"/>
    <property name="tagScripts" value="templates/scripts"/>
    <property name="tagProjectScripts" value="scripts"/>
    <property name="tagSources" value="templates/sources"/>
    <!--Fine dei tag-->

    <!--Valori recuperati automaticamente da Ant-->
    <property name="pathBaseProject" value="${basedir}${risalita}"/>
    <property name="pathResourcesProject" value="${pathBaseProject}/${tagMain}/resources"/>
    <property name="pathWebappProject" value="${pathBaseProject}/${tagMain}/${tagWebapp}"/>
    <property name="pathStaticProject" value="${pathBaseProject}/${tagMain}/${tagStatic}"/>
    <property name="projectsIdea" value="${basedir}/..${risalita}"/>
    <property name="pathBaseFramework" value="${projectsIdea}/${nomeBaseFramework}"/>
    <property name="pathJavaFramework" value="${pathBaseFramework}/${tagPathJava}/${nomeBaseFramework}"/>
    <property name="pathWebappFramework" value="${pathBaseFramework}/${tagMain}/${tagWebapp}"/>
    <property name="pathStaticFramework" value="${pathBaseFramework}/${tagMain}/${tagStatic}"/>
    <property name="pathScriptsFramework" value="${pathBaseFramework}/${tagScripts}"/>
    <property name="pathSourcesFramework" value="${pathBaseFramework}/${tagSources}"/>
    <!--Fine dei valori di Ant-->


    <!--Valori vari dipendenti-->
    <target name="init" description="Regola alcuni valori">
        <lower string="${nomeBaseProgetto}" to="nomeProgettoMinuscolo"/>
        <property name="pathJavaProject" value="${pathBaseProject}/${tagPathJava}/${nomeProgettoMinuscolo}"/>

        <property name="srcVaadin" value="${pathJavaFramework}"/>
        <property name="destVaadin" value="${pathBaseProject}/${tagPathJava}/${nomeBaseFramework}"/>

        <property name="srcApp" value="${pathSourcesFramework}/${tagApp}${tagTxt}"/>
        <property name="destApp" value="${pathJavaProject}/${dirApp}/${nomeBaseProgetto}${tagApp}${tagJava}"/>

        <property name="srcCost" value="${pathSourcesFramework}/${tagCost}${tagTxt}"/>
        <property name="destCost" value="${pathJavaProject}/${dirApp}/${tagCost}${tagJava}"/>

        <property name="srcBoot" value="${pathSourcesFramework}/${tagBoot}${tagTxt}"/>
        <property name="destBoot" value="${pathJavaProject}/${dirBoot}/${nomeBaseProgetto}${tagBoot}${tagJava}"/>

        <property name="srcUI" value="${pathSourcesFramework}/${tagUI}${tagTxt}"/>
        <property name="destUI" value="${pathJavaProject}/${dirUI}/${nomeBaseProgetto}${tagUI}${tagJava}"/>

        <property name="srcRead" value="${pathBaseFramework}/${tagRead}"/>
        <property name="destRead" value="${pathBaseProject}/${tagRead}"/>

        <property name="srcPom" value="${pathSourcesFramework}/${tagPom}${tagTxt}"/>
        <property name="destPom" value="${pathBaseProject}/${tagPom}${tagXml}"/>

        <property name="srcXmlPackage" value="${pathScriptsFramework}/${tagPackage}${tagXml}"/>
        <property name="destXmlPackage" value="${pathBaseProject}/${tagProjectScripts}/${tagPackage}${tagXml}"/>
        <property name="srcXmlProject" value="${pathBaseProject}/${tagOldProject}${tagXml}"/>
        <property name="destXmlProject" value="${pathBaseProject}/${tagProjectScripts}/${tagNewProject}${tagXml}"/>

        <property name="srcProperties" value="${pathSourcesFramework}/${tagFrameworkProperties}${tagTxt}"/>
        <property name="destProperties" value="${pathResourcesProject}/${tagProjectProperties}"/>

        <property name="srcMailProperties" value="${pathSourcesFramework}/${tagFrameworkMailProperties}${tagTxt}"/>
        <property name="destMailProperties" value="${pathResourcesProject}/${tagProjectMailProperties}"/>

        <property name="dirOldApp" value="${pathJavaProject}/${nomeProgettoMinuscolo}"/>

        <property name="tagFindFooter" value="super.inizia();&#10;"/>
        <property name="tagAddFooter" value="footer.setAppMessage(&quot;${nomeBaseProgetto} ${versione}&quot;);"/>
    </target>


    <target name="test" depends="init" description="Controllo della variabili">
        <echo message="nomeBaseProgetto = ${nomeBaseProgetto}"/>
        <echo message="nomeBaseFramework = ${nomeBaseFramework}"/>
        <echo message="risalita = ${risalita}"/>
        <echo message="pathBaseProject = ${pathBaseProject}"/>
        <echo message="pathJavaProject = ${pathJavaProject}"/>

        <echo message="projectsIdea = ${projectsIdea}"/>
        <echo message="pathBaseFramework = ${pathBaseFramework}"/>

        <echo message="pathJavaFramework = ${pathJavaFramework}"/>
        <echo message="pathWebappFramework = ${pathWebappFramework}"/>
        <echo message="pathScriptsFramework = ${pathScriptsFramework}"/>
        <echo message="pathSourcesFramework = ${pathSourcesFramework}"/>

        <echo message="srcVaadin = ${srcVaadin}"/>
        <echo message="destVaadin = ${destVaadin}"/>

        <echo message="srcApp = ${srcApp}"/>
        <echo message="destApp = ${destApp}"/>
        <echo message="srcBoot = ${srcBoot}"/>
        <echo message="destBoot = ${destBoot}"/>
        <echo message="srcUI = ${srcUI}"/>
        <echo message="destUI = ${destUI}"/>

        <echo message="srcRead = ${srcRead}"/>
        <echo message="destRead = ${destRead}"/>
        <echo message="srcXmlPackage = ${srcXmlPackage}"/>
        <echo message="destXmlPackage = ${destXmlPackage}"/>
        <echo message="srcXmlProject = ${srcXmlProject}"/>
        <echo message="destXmlProject = ${destXmlProject}"/>

        <echo message="srcProperties = ${srcProperties}"/>
        <echo message="destProperties = ${destProperties}"/>

        <echo message="pathWebappFramework = ${pathWebappFramework}"/>
        <echo message="pathWebappProject = ${pathWebappProject}"/>

        <echo message="dirOldApp = ${dirOldApp}"/>
        <echo message="srcPom = ${srcPom}"/>
        <echo message="destPom = ${destPom}"/>

        <echo message="pathStaticFramework = ${pathStaticFramework}"/>
        <echo message="pathStaticProject = ${pathStaticProject}"/>
    </target>


    <target name="creaNewOnly" description="Copia il singolo file passato come parametro">
        <copy file="${srcFile}" tofile="${destFile}" overwrite="false">
            <filterset>
                <filter token="LOWERPROJECT" value="${nomeProgettoMinuscolo}"/>
                <filter token="PACKAGE" value="${nomeProgettoMinuscolo}"/>
                <filter token="PROJECT" value="${nomeBaseProgetto}"/>
            </filterset>
        </copy>
    </target>


    <target name="creaSingoloFile" description="Copia il singolo file passato come parametro">
        <copy file="${srcFile}" tofile="${destFile}" overwrite="true">
            <filterset>
                <filter token="LOWERPROJECT" value="${nomeProgettoMinuscolo}"/>
                <filter token="PACKAGE" value="${nomeProgettoMinuscolo}"/>
                <filter token="PROJECT" value="${nomeBaseProgetto}"/>
            </filterset>
        </copy>
    </target>


    <target name="cancellaFile" description="Cancella un singolo file passato come parametro">
        <delete file="${srcFile}"/>
        <echo message="Cancellato il file ${srcFile}"/>
    </target>


    <target name="copiaVaadin" depends="init" description="Ricopia la directory completa di SpringVaadin">
        <copydir src="${srcVaadin}" dest="${destVaadin}"/>
    </target>


    <target name="creaApp" depends="init" description="Crea il file application col metodo Main">
        <antcall target="creaNewOnly">
            <param name="srcFile" value="${srcApp}"/>
            <param name="destPackage" value="${nomeProgettoMinuscolo}"/>
            <param name="destFile" value="${destApp}"/>
        </antcall>
    </target>


    <target name="creaCost" depends="init" description="Crea il file AppCost">
        <antcall target="creaNewOnly">
            <param name="srcFile" value="${srcCost}"/>
            <param name="destPackage" value="${nomeProgettoMinuscolo}"/>
            <param name="destFile" value="${destCost}"/>
        </antcall>
    </target>


    <target name="creaBoot" depends="init" description="Crea il file SpringBoot">
        <antcall target="creaNewOnly">
            <param name="srcFile" value="${srcBoot}"/>
            <param name="destPackage" value="${nomeProgettoMinuscolo}"/>
            <param name="destFile" value="${destBoot}"/>
        </antcall>
    </target>


    <target name="creaUI" depends="init" description="Crea il file UI">
        <antcall target="creaNewOnly">
            <param name="srcFile" value="${srcUI}"/>
            <param name="destPackage" value="${nomeProgettoMinuscolo}"/>
            <param name="destFile" value="${destUI}"/>
        </antcall>
        <echo message="destUI = ${destUI}"/>
    </target>


    <target name="creaRead" depends="init" description="Crea il file README">
        <antcall target="creaSingoloFile">
            <param name="srcFile" value="${srcRead}"/>
            <param name="destFile" value="${destRead}"/>
        </antcall>
    </target>


    <target name="checkRes" depends="getLengthRes,resVuoto"/>
    <target name="getLengthRes" depends="init" description="Controlla l'esistenza del file">
        <!--<length file="${destProperties}" property="lunghezza" />-->
        <condition property="fileResValido">
            <length   when="gt" length="0" file="${destProperties}"/>
        </condition>
    </target>

    <target name="resVuoto" depends="init" unless="${fileResValido}">
        <antcall target="creaSingoloFile">
            <param name="srcFile" value="${srcMailProperties}"/>
            <param name="destFile" value="${destMailProperties}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="srcFile" value="${srcProperties}"/>
            <param name="destFile" value="${destProperties}"/>
        </antcall>
        <replace file="${destProperties}"
                 token="spring.data.mongodb.database = algostest"
                 value="spring.data.mongodb.database = ${nomeProgettoMinuscolo}">
        </replace>
    </target>


    <target name="copiaWeb" depends="init" description="Copia la cartella webapp">
        <copydir src="${pathWebappFramework}" dest="${pathWebappProject}"/>
    </target>


    <target name="copiaStatic" depends="init" description="Copia la cartella resources.static">
        <copydir src="${pathStaticFramework}" dest="${pathStaticProject}"/>
    </target>


    <target name="copiaPom" depends="init" description="Copia il file pom.xml">
        <antcall target="creaSingoloFile">
            <param name="srcFile" value="${srcPom}"/>
            <param name="destFile" value="${destPom}"/>
        </antcall>
    </target>


    <target name="checkFooter" depends="init"
            description="Controlla che la property appMessage non esista giÃ  (per evitare duplicazioni)">

        <loadfile property="fileFooter" srcfile="${destUI}"/>
        <condition property="esisteGiaFooter">
            <matches pattern="setAppMessage" string="${fileFooter}"/>
        </condition>
        <antcall target="addFooter">
        </antcall>
    </target>


    <target name="addFooter" unless="${esisteGiaFooter}">
        <replace file="${destUI}"
                 token="${tagFindFooter}"
                 value="${tagFindFooter}&#009;&#009;${tagAddFooter}&#10;&#10;">
        </replace>
        <echo message="Aggiunta nel footer la property col nome dell'applicazione: ${nomeBaseProgetto}"/>
    </target>

    <target name="deleteOldApp" depends="init" description="Cancella la vecchia main class creata da Idea">
        <delete dir="${dirOldApp}"/>
    </target>


    <target name="creaScript" depends="init" description="Crea la directory con gli scripts">
        <antcall target="creaSingoloFile">
            <param name="srcFile" value="${srcXmlPackage}"/>
            <param name="destFile" value="${destXmlPackage}"/>
        </antcall>
        <replace file="${destXmlPackage}"
                 token="name=&quot;thisProject&quot; value=&quot;xxx&quot;"
                 value="name=&quot;thisProject&quot; value=&quot;${nomeBaseProgetto}&quot;">
        </replace>
        <antcall target="creaSingoloFile">
            <param name="srcFile" value="${srcXmlProject}"/>
            <param name="destFile" value="${destXmlProject}"/>
        </antcall>
    </target>


    <target name="modificaScript" depends="init" description="Modifica lo script appena spostato">
        <replace file="${destXmlProject}"
                 token="name=&quot;newProject&quot;"
                 value="name=&quot;updateProject&quot;">
        </replace>
        <replace file="${destXmlProject}"
                 token="updateProgetto"
                 value="updateProgetto">
        </replace>
        <replace file="${destXmlProject}"
                 token="creaProgetto"
                 value="creaProgetto">
        </replace>
        <replace file="${destXmlProject}"
                 token="&lt;property name=&quot;risalita&quot; value=&quot;&quot;/&gt;"
                 value="&lt;property name=&quot;risalita&quot; value=&quot;/..&quot;/&gt;">
        </replace>
        <replace file="${destXmlProject}"
                 token="&lt;target name=&quot;updateProgetto&quot; depends=&quot;creaProgetto&quot;
        description=&quot;Crea un nuovo progetto, modificando ed adeguando la struttura del project&quot;&gt;
        &lt;/target&gt;"
                 value="">
        </replace>
        <replace file="${destXmlProject}"
                 token=""
                 value="">
        </replace>
        <replace file="${destXmlProject}"
                 token="updateRes"
                 value="updateRes">
        </replace>
    </target>


    <target name="cancellaScript" depends="init" description="Cancella questo script">
        <antcall target="cancellaFile">
            <param name="srcFile" value="${srcXmlProject}"/>
        </antcall>
    </target>


    <target name="creaProgettoSenzaPom"
            depends="init,creaApp,creaCost,creaBoot,creaUI,copiaVaadin,creaRead,checkRes,copiaWeb,checkFooter,deleteOldApp"
            description="Crea un nuovo progetto, modificando ed adeguando la struttura del project">
    </target>

    <target name="creaProgetto"
            depends="init,copiaPom,creaProgettoSenzaPom"
            description="Crea un nuovo progetto, modificando ed adeguando la struttura del project">
    </target>


    <target name="creaProgettoSenzaPomECancellaScript" depends="init,creaProgetto"
            description="Crea un nuovo progetto, modificando ed adeguando la struttura del project">
    </target>


    <target name="updateProgetto" depends="init,copiaPom,creaProgettoSenzaPomECancellaScript"
            description="Crea un nuovo progetto, modificando ed adeguando la struttura del project">
    </target>


    <!-- Using Javascript functions to convert the string -->
    <!-- To lower case -->
    <scriptdef language="javascript" name="lower">
        <attribute name="string"/>
        <attribute name="to"/>
        project.setProperty(attributes.get("to"),attributes.get("string").toLowerCase());
    </scriptdef>


</project>